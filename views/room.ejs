<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Room</title>
    <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const roomId = "<%= id %>"
        var socket = io()
        var peer = new Peer()
        

        var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
            
            getUserMedia({video: true, audio: true}, (mystream) => {
                
                let video = document.createElement('video')
                video.muted =true
                video.srcObject = mystream
                video.addEventListener('loadedmetadata',  () => {
                        video.play();
                })
                document.querySelector('#videos').appendChild(video)

                peer.on('call',(call)=>{
                    call.answer(mystream)
                    let video = document.createElement('video')
                    call.on('stream', (remoteStream) => {
                        video.srcObject = remoteStream
                        video.addEventListener('loadedmetadata',  () => {
                                video.play();
                        })
                        document.querySelector('#videos').appendChild(video)
                    });
                    call.on('close',()=>{
                        video.remove();
                    })
                })

                socket.on('new-peer',(peerId)=>{
                    const call = peer.call(peerId, mystream)
                    let video = document.createElement('video')
                    call.on('stream', (remoteStream) => {
                        video.srcObject = remoteStream
                        video.addEventListener('loadedmetadata',  () => {
                            video.play();
                        })
                        document.querySelector('#videos').appendChild(video)
                    });
                    call.on('close',()=>{
                        video.remove();
                    })
                })

            }, function(err) {
                console.log('Failed to get local stream' ,err);
            });


            peer.on('open',(id)=>{
            console.log(id)
            socket.emit('new-participant',{
                roomId: roomId,
                peerId: id
            })
        })
        
    </script>

    <style>
        #videos{
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }
        video{
            height: 300px;
            width: 400px;
            object-fit: cover;
            padding: 8px;
        }
    </style>
</head>
<body>
    <div id="videos">

    </div>
</body>
</html>